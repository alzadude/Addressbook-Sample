<?xml version="1.0"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
           xmlns:views="org.axonframework.examples.addressbook.views.*"
           xmlns:sf="http://www.spicefactory.org/parsley/flex"
           creationComplete="doSubscribe()"
        >
    <mx:Script><![CDATA[
        import mx.messaging.events.MessageEvent;

        import org.axonframework.examples.addressbook.commands.ViewConstants;
        import org.axonframework.examples.addressbook.messages.ChangeViewMessage;
        import org.axonframework.examples.addressbook.messages.NotificationMessage;
        import org.axonframework.examples.addressbook.messages.ShowContactsMessage;
        import org.axonframework.examples.addressbook.messages.UpdatedContactMessage;
        import org.axonframework.examples.addressbook.model.Contact;

        [MessageDispatcher]
        public var dispatcher:Function;

        [MessageHandler]
        public function showRightViewStack(changeViewMessage:ChangeViewMessage):void {
            trace('Switching the view ...');
            switch (changeViewMessage.stackId) {
                case ViewConstants.HOME:
                    mainViewStack.selectedChild = home;
                    break;
                case ViewConstants.FIND:
                    mainViewStack.selectedChild = find;
                    break;
                case ViewConstants.CONTACTS:
                    mainViewStack.selectedChild = contacts;
                    break;
                case ViewConstants.NEW_ADDRESS:
                    mainViewStack.selectedChild = addAddress;
                    break;
                default:
                    mainViewStack.selectedChild = home
            }
        }

        public function messageHandler(event:MessageEvent):void {
            if (event.message.body is Contact) {
                dispatcher(new UpdatedContactMessage(event.message.body as Contact));
            }
        }

        public function acknowledgeHandler(event:Event):void {
            trace('acknowledge event : ');
            trace(event.toString());
        }

        public function faultHandler(event:Event):void {
            trace(event.toString());
        }

        [Init]
        public function init():void {
            dispatcher(new ShowContactsMessage());
        }

        private function doSubscribe():void {
            consumer.subscribe();
        }

        [MessageHandler]
        public function handleActivityLogEvent(event:NotificationMessage):void {
            trace("Received a notification message : " + event.message);
            activityBoxHolder.visible = true;
            activityBox.setStyle('borderColor', '#7FFF00');
            activityBox.setStyle('backgroundColor', '#FFF8DC');
            activityMessage.text = event.message;
            activityBoxHolder.visible = false;
            var notificationlabel:Label = new Label();
            notificationlabel.text = event.message;
            notificationMessages.addChildAt(notificationlabel, 0);
        }

        ]]></mx:Script>

    <mx:Consumer id="consumer" destination="event-bus" channelSet="{cs}" message="messageHandler(event)"
                 acknowledge="acknowledgeHandler(event);" fault=" faultHandler(event)"/>

    <mx:ChannelSet id="cs">
        <mx:AMFChannel url="http://localhost:8080/messagebroker/pollingamf"/>
    </mx:ChannelSet>

    <sf:Configure/>

    <mx:Dissolve id="dissolveOut" duration="10000" alphaFrom="1.0" alphaTo="0.0"/>
    <mx:HBox width="100%" height="100%">
        <mx:VBox height="100%" top="8" left="8" right="8" bottom="8">
            <views:ToolbarView id="toolbar" width="100%"/>
            <mx:HBox id="activityBoxHolder" hideEffect="dissolveOut" visible="false" backgroundColor="#91A7B2">
                <mx:Spacer width="160"/>
                <mx:HBox id="activityBox" borderStyle="solid" cornerRadius="10" width="1050"
                         horizontalScrollPolicy="off">
                    <mx:Label id="activityMessage" text=""/>
                </mx:HBox>
            </mx:HBox>
            <mx:ViewStack id="mainViewStack" width="100%" height="100%">
                <mx:HBox id="home" horizontalAlign="center">
                    <mx:Image source="@Embed(source='/assets/images/logo-large.png')"/>
                </mx:HBox>
                <views:SearchView id="find" width="100%" height="100%"/>
                <views:ContactsView id="contacts" width="100%" height="100%"/>
                <views:AddAddressView id="addAddress" width="100%" height="100%"/>
            </mx:ViewStack>
        </mx:VBox>
        <mx:VBox id="notificationMessages" width="25%">

        </mx:VBox>
    </mx:HBox>

</mx:Canvas>
