<?xml version="1.0"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
           xmlns:views="org.axonframework.examples.addressbook.views.*"
           xmlns:sf="http://www.spicefactory.org/parsley/flex"
        >
    <mx:Script><![CDATA[
        import org.axonframework.examples.addressbook.commands.ViewConstants;
        import org.axonframework.examples.addressbook.messages.ChangeViewMessage;
        import org.axonframework.examples.addressbook.messages.ErrorNotificationMessage;
        import org.axonframework.examples.addressbook.messages.NotificationMessage;
        import org.axonframework.examples.addressbook.messages.ShowContactsMessage;
        import org.axonframework.examples.addressbook.messages.ValidationMessage;

        [MessageDispatcher]
        public var dispatcher:Function;

        [MessageHandler]
        public function showRightViewStack(changeViewMessage:ChangeViewMessage):void {
            switch (changeViewMessage.stackId) {
                case ViewConstants.HOME:
                    mainViewStack.selectedChild = home;
                    break;
                case ViewConstants.FIND:
                    mainViewStack.selectedChild = find;
                    break;
                case ViewConstants.CONTACTS:
                    mainViewStack.selectedChild = contacts;
                    break;
                case ViewConstants.NEW_ADDRESS:
                    mainViewStack.selectedChild = addAddress;
                    break;
                default:
                    mainViewStack.selectedChild = home
            }
        }

        [Init]
        public function init():void {
            dispatcher(new ShowContactsMessage());
        }

        [MessageHandler]
        public function handleActivityLogEvent(message:NotificationMessage):void {
            createNotification(message.message, Notification.INFO);
        }

        [MessageHandler]
        public function handleErrorMessage(message:ErrorNotificationMessage):void {
            createNotification(message.message, Notification.ERROR);
        }

        [MessageHandler]
        public function handleValidationMessage(message:ValidationMessage):void {
            createNotification(message.message, Notification.VALID);
        }

        private function createNotification(message:String, type:int):void {
            var note:Notification = new Notification();
            note.message = message;
            note.type = type;
            notificationMessages.addChildAt(note, 0);

            if (notificationMessages.getChildren().length > 8) {
                notificationMessages.removeChildAt(8);
            }
        }]]></mx:Script>

    <sf:Configure/>

    <mx:Dissolve id="dissolveOut" duration="10000" alphaFrom="1.0" alphaTo="0.0"/>

    <mx:HBox width="100%" height="100%" left="10">
        <mx:VBox height="100%" top="8" left="8" right="8" bottom="8" width="70%">
            <views:ToolbarView id="toolbar" width="100%"/>
            <mx:ViewStack id="mainViewStack" width="100%" height="100%">
                <mx:HBox id="home" horizontalAlign="center">
                    <mx:Image source="@Embed(source='/assets/images/logo-large.png')"/>
                </mx:HBox>
                <views:SearchView id="find" width="100%" height="100%"/>
                <views:ContactsView id="contacts" width="100%" height="100%"/>
                <views:AddAddressPopupView id="addAddress" width="100%" height="100%"/>
            </mx:ViewStack>
        </mx:VBox>
        <mx:VBox id="notificationMessages" width="25%">
        </mx:VBox>
    </mx:HBox>

</mx:Canvas>
